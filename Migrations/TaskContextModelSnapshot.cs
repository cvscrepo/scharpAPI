// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoEF;

#nullable disable

namespace ProyectoEF.Migrations
{
    [DbContext(typeof(TaskContext))]
    partial class TaskContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoEF.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a18f9882-1dd3-4ed7-bfed-b491aed7ba25"),
                            Name = "Actividades pendientes",
                            Peso = 20
                        },
                        new
                        {
                            Id = new Guid("a18f9882-1dd3-4ed7-bfed-b491aed7ba02"),
                            Name = "Actividades Personales",
                            Peso = 50
                        });
                });

            modelBuilder.Entity("ProyectoEF.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfCompletion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriorityTask")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b007a8c9-6d59-4557-9e9c-7a7082f23e1e"),
                            CategoryId = new Guid("a18f9882-1dd3-4ed7-bfed-b491aed7ba25"),
                            CreatedDate = new DateTime(2023, 9, 4, 10, 12, 15, 544, DateTimeKind.Local).AddTicks(488),
                            DateOfCompletion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PriorityTask = 1,
                            Title = "Pagos de servicios publicos"
                        },
                        new
                        {
                            Id = new Guid("b007a8c9-6d59-4557-9e9c-7a7082f24e1e"),
                            CategoryId = new Guid("a18f9882-1dd3-4ed7-bfed-b491aed7ba02"),
                            CreatedDate = new DateTime(2023, 9, 4, 10, 12, 15, 544, DateTimeKind.Local).AddTicks(508),
                            DateOfCompletion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PriorityTask = 0,
                            Title = "Terminar de ver peliculas en Netflix"
                        });
                });

            modelBuilder.Entity("ProyectoEF.Models.Task", b =>
                {
                    b.HasOne("ProyectoEF.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProyectoEF.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
